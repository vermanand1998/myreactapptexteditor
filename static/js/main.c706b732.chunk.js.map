{"version":3,"sources":["Components/Navbar.js","Components/TextArea.js","Components/About.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","htmlFor","Name","TextArea","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","About","myStyle","setmyStyle","btnText","setbtnText","class","border","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","showAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c706b732.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} bg-primary`}>\r\n        <div className=\"container-fluid \">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n             \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light' ? 'dark':'light'}`}>\r\n               <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"></input>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"Name>Enable Dark Mode</label>\r\n             </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        // props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        // props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText=\" \";\r\n        setText(newText);\r\n        // props.showAlert(\"All text clear\",\"success\");\r\n    }\r\n\r\n    const handleOnChange =(event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy=()=>{\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        // props.showAlert(\"Text copied\",\"success\");\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        // props.showAlert(\"Removed extra space\",\"success\");\r\n    }\r\n    const [text,setText]=useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1 className=\"my-4\" style={{color:' #ff8000'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea id=\"val\" className=\"form-control\"style={{backgroundColor:'black' ? 'black':'white',color:'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"12\"></textarea>\r\n            </div>\r\n         <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to upperCase</button>\r\n         <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n         <button className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n         <button className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n         <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n           <h1 style={{color:' #ff8000'}}>Your text summary :)</h1>\r\n           <p style={{color:'#336600'}}>{text.split(\" \").length} words and {text.length} characters</p>\r\n           <p style={{color:'#336600'}}>{0.008* text.split(\" \").length} Minutes read</p>\r\n            <h2 style={{color:' #ff8000'}}>Preview :)</h2>\r\n            <p style={{color:'#336600'}}>{text.length>0?text:\"Enter something in the textbox above to preview it here...\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\nexport default function About() {\r\n    const [myStyle,setmyStyle]=useState({\r\n        color:'black',\r\n        backgroundColor:'white'\r\n      })\r\n\r\n    const [btnText,setbtnText]=useState(\"Enable Dark Mode\")\r\n    function toggleStyle(){\r\n        if(myStyle.color ==='black'){\r\n         setmyStyle({\r\n        color:'#ff8000',\r\n        backgroundColor:'black',\r\n        border:'2px solid white' \r\n         })\r\n         setbtnText(\"Enable light Mode\")\r\n        }\r\n         else{\r\n            setmyStyle({\r\n                color:'black',\r\n                backgroundColor:'white' \r\n         })\r\n         setbtnText(\"Enable Drak Mode\")\r\n        }\r\n    } \r\n\r\n    return (\r\n        <div className=\"container my-5\" style={myStyle}>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n        <div class=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button class=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button class=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n             <div>\r\n            <button type=\"button\" onClick={toggleStyle} className=\"btn btn-dark my-2\">{btnText}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n    \r\n        props.alert && <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n             <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextArea from './Components/TextArea';\nimport About from './Components/About';\nimport React, {useState} from 'react';\nimport Alert from './Components/Alert';\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert,setAlert]=useState(null);\n  const showAlert =(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    });\n    setTimeout(()=>{\n      setAlert(null);\n    },3000);\n  }\n  const toggleMode=()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor='#000000';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  \n  return (\n    <>\n    <Router>\n   <Navbar title=\"TextEditor\"aboutText=\"About us\" mode={mode} toggleMode={toggleMode} />\n   <Alert alert={alert} />\n   <div className=\"container my-10\">\n     <Switch>\n       <Route exact path=\"/about\">\n       <About />\n       </Route>\n       <Route exact path=\"/\">\n       <TextArea showAlert={showAlert} heading=\"ENTER THE TEXT TO ANALYZE BELOW :)\" mode={mode} />\n       </Route>\n     </Switch>\n  </div>\n  </Router>\n    </>   \n  );\n \n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}